# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  rgQA: 'test7'
  rgLive: 'test8'


stages:
- stage: StageBuildApp
  variables:
    stga: 1-1
    stgb: 1-2
  jobs:
  - job: JobBuildAppDotNet
    variables:
      joba: 1-1-1
      jobb: 1-1-2
    pool:
      vmImage: windows-latest
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure (VSE with MSDN)'
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          echo Hello, world!
          echo test job variable
          echo $(joba)
          echo 'test on same line inside single quote: $(jobb)'
          echo 'test stage var'
          echo $(stga)
          echo 'test root var'
          echo $(rgQA)
          Write-Host "##vso[task.setvariable variable=job1var;isOutput=true;]$(joba)"
          #echo has variable worked Sjob1var: $job1var
          #echo has variable worked S job1var : $(job1var)
          #echo has variable worked S Sjob1var : $($job1var)
      displayName: 'Run a one-line script'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure (VSE with MSDN)'
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          echo Hello, world!
          echo test job variable
          echo $(joba)
          echo 'test on same line inside single quote: $(jobb)'
          echo 'test stage var'
          echo $(stga)
          echo 'test root var'
          echo $(rgQA)
          echo not setting var again
          #echo has variable worked Sjob1var: $job1var
          echo has variable worked S job1var : $(job1var)
          #echo has variable worked S Sjob1var : $($job1var)
    - script: |
        echo simple cmd.exe script
      displayName: 'Some other script'


  - job: Job2ndBuildAppDotNet
    dependsOn: ['JobBuildAppDotNet']
    variables:
      jobc: 1-2-1
      jobd: 1-2-2
      job1var: $[ dependencies.JobBuildAppDotNet.outputs['job1var'] ]
    pool:
      vmImage: windows-latest
    steps:
    - script: |
        echo Hello, world!
        echo test job variable
        echo other job $(joba)
        echo other job test on same line inside single quote: $(jobb)
        echo 'test stage var'
        echo $(stga)
        echo 'test root var'
        echo $(rgQA)
        echo test this job variable
        echo this job $(joba)
        echo this job test on same line inside single quote: $(jobb)
        echo **********************
        echo ** var from job 1 ****
        echo was......: $(job1var)
      displayName: 'Run a one-line script'

    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml
      displayName: 'Some other script'


- stage: StageInfrastructureQA
  jobs:
  - job: JobInfrastructureReleaseQA
    pool: 
      vmImage: 'windows-latest'
    variables:
      templateFile: './infrastructure/main.bicep'
      qaTemplateParameterFile: './infrastructure/main.parameters.qa.json'
    steps:
      - task: AzureCLI@2
        displayName: 'InfQA Task1'
        inputs:
          azureSubscription: 'Azure (VSE with MSDN)'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            echo 'try and show displayName'
            echo '$(displayName)'

      - task: AzureCLI@2
        displayName: 'InfQA Task2'
        inputs:
          azureSubscription: 'Azure (VSE with MSDN)'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az --version
            echo 'try and show displayName'
            echo '$(displayName)'
      - script: echo Hello, world!
      - script: |
          echo Hello, world!
          echo test job variable
          echo $(joba)
          echo 'test on same line inside single quote: $(jobb)'
          echo 'test stage var'
          echo $(stga)
          echo 'test root var'
          echo $(rgQA)
        displayName: 'Run a one-line script'
      - task: AzureCLI@2
        displayName: 'InfQA Task3'
        inputs:
          azureSubscription: 'Azure (VSE with MSDN)'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az --version
            echo 'try and show displayName'
            echo '$(displayName)'          


- stage: DeployQA
  jobs:
  - job: DeployQA
